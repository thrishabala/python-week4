import threading
import time
import json

class Inventory:
    def __init__(self):
        self.items = {}

    def add_item(self, item_name, quantity):
        if item_name in self.items:
            self.items[item_name] += quantity
        else:
            self.items[item_name] = quantity

    def remove_item(self, item_name, quantity):
        if item_name in self.items and self.items[item_name] >= quantity:
            self.items[item_name] -= quantity
            if self.items[item_name] == 0:
                del self.items[item_name]
        else:
            print(f"Cannot remove {quantity} of {item_name}. Not enough stock.")

    def check_stock(self, item_name):
        return self.items.get(item_name, 0)

    def save_to_file(self, filename):
        try:
            with open(filename, 'w') as f:
                json.dump(self.items, f)
        except IOError as e:
            print(f"Error saving to file: {e}")

    def load_from_file(self, filename):
        try:
            with open(filename, 'r') as f:
                self.items = json.load(f)
        except IOError as e:
            print(f"Error loading from file: {e}")
        except json.JSONDecodeError as e:
            print(f"Error decoding JSON: {e}")

    def check_stock_levels(self):
        while True:
            for item_name, quantity in self.items.items():
                if quantity < 5:  # Threshold for low stock
                    print(f"Restock alert for {item_name}! Only {quantity} left in stock.")
            time.sleep(10)  # Check every 10 seconds

inventory = Inventory()
inventory.add_item("Apples", 10)
inventory.add_item("Bananas", 3)
inventory.remove_item("Apples", 2)

inventory.save_to_file('inventory.json')

# Start a thread to check stock levels
stock_thread = threading.Thread(target=inventory.check_stock_levels)
stock_thread.daemon = True  # Daemonize thread so it exits when the program ends
stock_thread.start()

time.sleep(15)  # Let the thread run for a while to see alerts

inventory.load_from_file('inventory.json')
print(f"Loaded Inventory: {inventory.items}")
